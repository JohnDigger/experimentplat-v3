spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/spring_teach?serverTimezone=UTC&characterEncoding=utf-8&useUnicode=true&characterSetResults=utf8&allowMultiQueries=true&useSSL=true
    username: root
    password: 123456
    sql-script-encoding: utf-8
    #dbcp连接池优化与数据库服务器的连接alidruid
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
    #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initialsize: 5
    #最小连接池数量
    minIdle: 5
    #最大连接池数量
    maxActive: 20
    #配置获取连接等待超时的时间
    maxWait: 60000
    #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsHillis: 60000
    #配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    #验证连接有效与否的SQL，不同的数据配置不同
    validationQuery: select 1
    #建议配置为true，不影响性能，并且保证安全性。
    #申请连接的时候检测，如果空闲时间大于
    # timeBetweenEvictionRunsMillis,
    #执行validationQuery检测连接是否有效。
    testwhileIdle: true
    #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。#这里建议配置为TRUE，防止取到的连接不可用
    test0nBorrow: true
    #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testonReturn: false
    #是否缓存preparedStatement，也就是PSCache.
    #PSCache对支持游标的数据库性能提升巨大，比如说oracle.#在mysql5.5以下的版本中没有PSCache功能，建议关闭掉。
    #作者在5.5版本中使用PSCache，通过监控界面发现PSCache有缓存命中率记录，#该应该是支持PSCache.
    #打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    #属性类型是字符串，通过别名的方式配置矿展插件，
    #常用的插件有:
    #监控统计用的filter : stat#日志用的filter :log4j#防御sql注入的filter : wall
    filters: stat



#三个中横杠多行注释
---
spring:
  profiles: produce
  datasource:
  driver-class-name: com.mysql.cj.jbc.Driver
  url: jdbc:mysql://localhost:3306/spring_teach?serverTimezone=UTC&characterEncoding=utf-8&useUnicode=true&characterSetResults=utf8&allowMultiQueries=true&useSSL=true
  username: root
  password: 123456
---



mybatis-plus:
  #如果是放在src/main/java目录下classpath: / com/coolwen/mybatis/plus/*/mapper/*Mapper .xm1l
  #如果是放在resource目录classpath : / mapper/*Mapper .xml
  mapper-locations: classpath:/mapper/*Mapper.xm1,classpath:com/exprimentplat/mybatisplus/springboot/**/**.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com/exprimentplat/mybatisplus/springboot.entity, com/exprimentplat/mybatisplus/springboot.**.pojo
  global-config:
    db-config:
      #自动下横线转驼峰式
      table-underline: true
      #主键类型﹒0:"数据库ID自增"，1:"用户输入ID",2:"全局唯一ID（数字类型唯一ID)"，3:"全局唯一ID UUID" ;
      id-type: auto
      #_0∶数据库ID自增1:用户输入id—2:全局唯一id(IdWorker)3:全局唯一ID(uuid)
      #id-type: 0
      #field-strategy: 2#逻辑删除配置
      logic-delete-value: 1
      #逻辑删除配置
      logic-not-delete-value: 0
      #数据库大写下划线转换
      capital-mode: true
      #表名前缀
      table-prefix: t_
      #驼峰格式处理字段
    db-column-underline: true

    #启动时显示mybatis框架的logo
    banner: true
#  mapper-locations: classpath:/mapper/mybatisplus/*Mapper.xml


configuration:
  #配置返回数据库(column下划线命名&&返回java实体是驼峰命名)，自动匹配无需as(没开启这个，SQL需要写as  select user_id as userId
  map-underscore-to-camel-case: true
  #配置的缓存的全局开关
  cache-enabled: false
  #延时加载的开关
  lazyLoadingEnabled: false
  #开启的话，延时加载一个属性时会加载该对象全部属性，否则按需加载属性
  multipleResultsetsEnabled: false
  #配置JdbcTypeForNull, oracle数据库必须配置#jdbc-type-for-null: 'null'
  #打印sql语句,调试用
  log-impl: org.apache.ibatis.logging.stdout.std0utImpl
  database-id: mysql
